// Code generated by MockGen. DO NOT EDIT.
// Source: rule-exporter.go
//
// Generated by this command:
//
//	mockgen -source=rule-exporter.go -destination=./mock/mocks.go
//
// Package mock_ruleengine is a generated GoMock package.
package mock_ruleengine

import (
	reflect "reflect"

	rule_engine "github.com/prajakta-scalent/rule-engine/pkg/rule-engine"
	gomock "go.uber.org/mock/gomock"
)

// MockResultExporter is a mock of ResultExporter interface.
type MockResultExporter struct {
	ctrl     *gomock.Controller
	recorder *MockResultExporterMockRecorder
}

// MockResultExporterMockRecorder is the mock recorder for MockResultExporter.
type MockResultExporterMockRecorder struct {
	mock *MockResultExporter
}

// NewMockResultExporter creates a new mock instance.
func NewMockResultExporter(ctrl *gomock.Controller) *MockResultExporter {
	mock := &MockResultExporter{ctrl: ctrl}
	mock.recorder = &MockResultExporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResultExporter) EXPECT() *MockResultExporterMockRecorder {
	return m.recorder
}

// Save mocks base method.
func (m *MockResultExporter) Save(executionID string, result []rule_engine.RuleGroupResult) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", executionID, result)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockResultExporterMockRecorder) Save(executionID, result any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockResultExporter)(nil).Save), executionID, result)
}
